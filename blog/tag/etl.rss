<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>preaction</title>
        <link>http://preaction.me/blog/tag/etl/</link>
        <atom:link href="http://preaction.me/blog/tag/etl.rss" rel="self" type="application/rss+xml" />
        <description>Blog feed of preaction</description>
        <generator>Statocles 0.094</generator>
        <item>
            <title>Everyday ETL With Yertl</title>
            <link>http://preaction.me/blog/2018/09/09/everyday-etl-with-yertl/</link>
            <guid>http://preaction.me/blog/2018/09/09/everyday-etl-with-yertl/</guid>
            <description><![CDATA[
                <p>I use <a href="https://metacpan.org/pod/ETL::Yertl">ETL::Yertl</a> a lot. Despite its
present unpolished state, it contains some important, easy-to-use tools that I
need to get my work done. For example, this week I got an e-mail from Slaven (a
CPAN tester and a tireless reporter of CPAN issues found by testing) saying
that some records were missing from one the APIs on <a href="http://cpantesters.org">CPAN
Testers</a>: The
<a href="http://fast-matrix.cpantesters.org">fast-matrix</a> had 3300 records for the
&quot;forks&quot; distribution version 0.36, but the
<a href="http://matrix.cpantesters.org">matrix</a> had only 300 records. The utilities in
<a href="https://metacpan.org/pod/ETL::Yertl">ETL::Yertl</a> made it easy to find and
manipulate the data I needed to diagnose this problem.</p>

                    <p><a href="http://preaction.me/blog/2018/09/09/everyday-etl-with-yertl/#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://preaction.me/blog/tag/etl/">etl</a>
                    <a href="http://preaction.me/blog/tag/yertl/">yertl</a>
                </p>
            ]]></description>
            <pubDate>
                Sun, 09 Sep 2018 00:00:00 +0000
            </pubDate>
        </item>
        <item>
            <title>Managing SQL Data with Yertl</title>
            <link>http://preaction.me/blog/2015/01/21/managing-sql-data-with-yertl.html</link>
            <guid>http://preaction.me/blog/2015/01/21/managing-sql-data-with-yertl.html</guid>
            <description><![CDATA[
                <p><a href="http://blogs.perl.org/users/preaction/2015/01/managing-sql-data-with-yertl.html">Originally posted on blogs.perl.org -- Managing SQL Data with
Yertl</a></p>

<p>Every week, I work with about a dozen SQL databases. Some are Sybase, some
MySQL, some SQLite. Some have different versions in dev, staging, and
production. All of them need data extracted, transformed, and loaded.</p>

<p>DBI is the clear choice for dealing with SQL databases in Perl, but there are a
dozen lines of Perl code in between me and the operation that I want. Sure,
I&#39;ve got modules and web applications and ad-hoc commands and scripts that
perform certain individual tasks on my databases, but sometimes those things
don&#39;t quite do what I need right now, and I just want something that will let
me execute whatever SQL I can come up with.</p>

<p><a href="http://metacpan.org/pod/ETL::Yertl">Yertl (ETL::Yertl)</a> is a shell-based ETL
framework. It&#39;s under development (as is all software), but included already is
a small utility called <a href="http://metacpan.org/pod/ysql">ysql</a> to make dealing
with SQL databases easy.</p>

                    <p><a href="http://preaction.me/blog/2015/01/21/managing-sql-data-with-yertl.html#section-2">Continue reading...</a></p>
                <p>Tags:
                    <a href="http://preaction.me/blog/tag/perl/">perl</a>
                    <a href="http://preaction.me/blog/tag/sql/">sql</a>
                    <a href="http://preaction.me/blog/tag/etl/">etl</a>
                    <a href="http://preaction.me/blog/tag/yertl/">yertl</a>
                </p>
            ]]></description>
            <pubDate>
                Wed, 21 Jan 2015 00:00:00 +0000
            </pubDate>
        </item>
    </channel>
</rss>

